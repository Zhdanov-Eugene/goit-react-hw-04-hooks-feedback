{"version":3,"sources":["components/statistics/Statistics.module.css","components/section/Section.module.css","components/container/Container.module.css","components/feedback/FeedbackOptions.module.css","components/container/Container.js","components/layout/Layout.js","components/section/Section.js","components/feedback/FeedbackOptions.js","components/statistics/Statistics.js","components/statistics/Notification.js","App.js","index.js"],"names":["module","exports","Container","children","className","style","container","Layout","Section","title","styles","section","FeedbackOptions","options","onLeaveFeedback","map","element","type","button","onClick","toUpperCase","Statistics","props","statistics","item","good","neutral","bad","total","positivePercentage","Notification","notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","feedbacks","Object","keys","a","prev","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,aAAe,iCAAiC,KAAO,2B,kBCArHD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,OAAS,kC,qICWZC,EARG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKC,UAAWC,IAAMC,UAAtB,SAAkCH,KCS5BI,EAVA,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAH,OACb,mCACE,cAAC,EAAD,UAAYA,O,gBCYDK,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAON,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWM,IAAOC,QAA3B,UACE,oBAAIP,UAAWM,IAAOD,MAAtB,SAA8BA,IAC7BN,M,gBCoBQS,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GACX,OACE,wBACEC,KAAK,SACLb,UAAWM,IAAOQ,OAElBC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,EAAQI,eAHJJ,S,gBCuBFK,EA/BI,SAAAC,GACjB,OACE,sBAAKlB,UAAWM,IAAOa,WAAvB,UACE,sCACO,sBAAMnB,UAAWM,IAAOc,KAAxB,SAA+BF,EAAMG,UAE5C,yCACU,sBAAMrB,UAAWM,IAAOc,KAAxB,SAA+BF,EAAMI,aAE/C,qCACM,sBAAMtB,UAAWM,IAAOc,KAAxB,SAA+BF,EAAMK,SAE3C,uCACQ,sBAAMvB,UAAWM,IAAOc,KAAxB,SAA+BF,EAAMM,WAE7C,kDACoB,IAClB,uBAAMxB,UAAWM,IAAOc,KAAxB,UAA+BF,EAAMO,mBAArC,cCTOC,EARM,SAAC,GAAe,IAAbrB,EAAY,EAAZA,MACtB,OAAO,mBAAGL,UAAWM,IAAOqB,aAArB,SAAoCtB,KCE9B,SAASuB,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAkBMC,EAAqB,WAEzB,OADcZ,EAAOC,EAAUC,GAS3BW,EAAY,CAAEb,OAAMC,UAASC,OAC7Bd,EAAU0B,OAAOC,KAAKF,GAE5B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAS7B,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBI,QAASA,EAASC,gBAhCrB,SAAA2B,GAClB,OAAQA,GACN,IAAK,OACHP,GAAQ,SAAAQ,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,UACHP,GAAW,SAAAO,GAAI,OAAIA,EAAO,KAC1B,MACF,IAAK,MACHN,GAAO,SAAAM,GAAI,OAAIA,EAAO,KACtB,MACF,QACE,aAuBF,cAAC,EAAD,CAASjC,MAAM,aAAf,SACGgB,GAAQC,GAAWC,EAClB,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,mBApBiBc,KAAKC,MAAc,IAAPnB,EAAcY,OAuB7C,cAAC,EAAD,CAAc5B,MAAM,sBCnD9BoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,W","file":"static/js/main.f23f9e28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2lKwF\",\"notification\":\"Statistics_notification__-Yt8o\",\"item\":\"Statistics_item__1BJDW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3KEEO\",\"title\":\"Section_title__N7li3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__t7a-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1USGM\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={style.container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container from '../container/Container';\r\n\r\nconst Layout = ({ children }) => (\r\n  <>\r\n    <Container>{children}</Container>\r\n  </>\r\n);\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(element => {\r\n        return (\r\n          <button\r\n            type=\"button\"\r\n            className={styles.button}\r\n            key={element}\r\n            onClick={() => onLeaveFeedback(element)}\r\n          >\r\n            {element.toUpperCase()}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = props => {\r\n  return (\r\n    <div className={styles.statistics}>\r\n      <p>\r\n        Good <span className={styles.item}>{props.good}</span>\r\n      </p>\r\n      <p>\r\n        Neutral <span className={styles.item}>{props.neutral}</span>\r\n      </p>\r\n      <p>\r\n        Bad <span className={styles.item}>{props.bad}</span>\r\n      </p>\r\n      <p>\r\n        Total <span className={styles.item}>{props.total}</span>\r\n      </p>\r\n      <p>\r\n        Positive feedback{' '}\r\n        <span className={styles.item}>{props.positivePercentage}%</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Notification = ({ title }) => {\r\n  return <p className={styles.notification}>{title}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import { useState } from 'react';\nimport Layout from './components/layout/Layout';\nimport Section from './components/section/Section';\nimport FeedbackOptions from './components/feedback/FeedbackOptions';\nimport Statistics from './components/statistics/Statistics';\nimport Notification from './components/statistics/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const updateStats = a => {\n    switch (a) {\n      case 'good':\n        setGood(prev => prev + 1);\n        break;\n      case 'neutral':\n        setNeutral(prev => prev + 1);\n        break;\n      case 'bad':\n        setBad(prev => prev + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const positiveFeedback = Math.floor((good * 100) / countTotalFeedback());\n    return positiveFeedback;\n  };\n\n  const feedbacks = { good, neutral, bad };\n  const options = Object.keys(feedbacks);\n\n  return (\n    <Layout>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={updateStats} />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {good || neutral || bad ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification title=\"No feedbacks\" />\n        )}\n      </Section>\n    </Layout>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}